name: Scala CI

on:
  push:
    branches: [ "base" ]
    tags: ["v*"]
  pull_request:
    branches: [ "base" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'sbt'
        
    
    - name: Cache sbt
      uses: actions/cache@v3
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          ~/.cache/coursier/v1
          ~/AppData/Local/Coursier/Cache/v1
          ~/Library/Caches/Coursier/v1
        key: ${{ runner.os }}-sbt-cache-v3-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
        
    - name: Check format
      run: sbt scalafmtCheck     
        
    - name: Run tests
      run: sbt test

  publish:
    name: Publish Artifacts
    needs: [ build ]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/base' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'sbt'

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v3-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Publish artifacts
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASS }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
        run: sbt ci-release
